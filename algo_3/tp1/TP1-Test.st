TestCase subclass: #ContadorTests	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Test'!!ContadorTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:51'!test02contadorEligeElPresupuestoMasBarato 	|pintores tecnica contador pintor01 pintor02 pintura presupuestoMasBarato|		contador := Contador new.	tecnica := TecnicaPincel new.	pintores := OrderedCollection new.		pintor01 := Pintor conNombre: 'pablo' Tecnica: tecnica Precio: 500.	pintor02 := Pintor conNombre: 'jose' Tecnica: tecnica  Precio: 1500. 	pintores add: pintor01.	pintores add: pintor02.	pintura := Pintura conNombre: 'alba' precio: 5 manosPincel: 1 manosRodillo: 1.		presupuestoMasBarato := contador presupuestoMasBaratoParaPintarMetrosCuadrados: 50 conPintura: pintura  entre: pintores.	self assert: 'pablo' equals: (presupuestoMasBarato responsable). ! !!ContadorTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:51'!test03contadorTomaEnCuentaLosDescuentos	|tecnica contador pintor pintura valorPresupuestado valorEsperado|		contador := Contador new.	tecnica := TecnicaPincel new.		pintor := Pintor conNombre: 'pablo' Tecnica: tecnica Precio: 500.	pintura := Pintura conNombre: 'alba' precio: 5 manosPincel: 1 manosRodillo: 1.		valorPresupuestado := (contador calcularPresupuestoDe: pintor paraPintar: 1000 conPintura: pintura) valor.	valorEsperado := (1000 "metros" * 2 "horas por metro pincel" * 500 "precio por hora" * 1 "mano" * 0.5 "descuento 50 Porciento ") + (1000 "metros" * 4 "litros por pincel" * 5 "costo de pintura" * 1 "mano").	self assert: valorEsperado closeTo: valorPresupuestado . ! !!ContadorTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:51'!test01contadorCalculaCorrectamenteElPresupuesto	|tecnica contador pintor pintura valorPresupuestado valorEsperado|		contador := Contador new.	tecnica := TecnicaPincel new.		pintor := Pintor conNombre: 'pablo' Tecnica: tecnica Precio: 500.	pintura := Pintura conNombre: 'alba' precio: 5 manosPincel: 1 manosRodillo: 1.		valorPresupuestado := (contador calcularPresupuestoDe: pintor paraPintar: 20 conPintura: pintura) valor.	valorEsperado := (20 "metros" * 2 "horas por metro pincel" * 500 "precio por hora" * 1 "mano") + (20 "metros" * 4 "litros por pincel" * 5 "costo de pintura" * 1 "mano").	self assert: valorEsperado closeTo: valorPresupuestado . ! !TestCase subclass: #ExcepcionesTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Test'!!ExcepcionesTest methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:52'!test01presupuestarSinPintoresRegistradosDevuelveUnError	|algoFix alba presupuesto|	algoFix := AlgoFix new.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	self should: [  	presupuesto:=algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 50 conPintura: alba.	] raise: FaltadePintoresRegistradosError.		 ! !TestCase subclass: #PintorTests	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Test'!!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:46'!test11pintorCalculaCorrectamenteElTiempoDeTrabajoConMasDeUnaManoConPincelConMetrosFlotantes	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaPincel new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500.	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 2 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 4.7 conPintura: venier.	tiempoesperado := (4.7 "metros" *2 "manos" *2 "horas por pincel").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:41'!test01pintorCalculaCorrectamenteElTiempoDeTrabajoCon1ManoConPincelConMetrosEnteros	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaPincel new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500.	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 1 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 15 conPintura: venier.	tiempoesperado := (15 "metros" *1 "mano" *2 "horas de pincel").	self assert: tiempoesperado closeTo: (tiempo).	! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:43'!test04pintorCalculaCorrectamenteElTiempoDeTrabajoCon1ManoConPincelConMetrosFlotantesGrandes	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaPincel new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500. 	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 1 manosRodillo:1. 	tiempo := pintor1 tiempoDeTrabajoPor: 557899000.574399204 conPintura: venier.	tiempoesperado := (557899000.574399204 "metros" *1 "mano" *2 "horas de pincel").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:47'!test13pintorCalculaCorrectamenteElTiempoDeTrabajoConMasDeUnaManoConRodilloConMetrosEnteros	|pintor1 venier unatecnica tiempo tiempoesperado|		unatecnica := TecnicaRodillo new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500. 	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 2 manosRodillo:3.	tiempo := pintor1 tiempoDeTrabajoPor: 55 conPintura: venier.	tiempoesperado := (55 "metros" *3 "manos" *1 "horas por rodillo").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 00:49'!test18pintorCalculaCorrectamenteElValorDeLaManoDeObraConPincelSinDescuento	|unaTecnica valorManoDeObra valorEsperado pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1.		valorManoDeObra := pintor1 valorManoDeObraPor: 10 conPintura: alba . 	valorEsperado := (1 "mano" * 10 "metros" * 2 "horas Por pincel" * 500 "precio por litro") .	self assert: valorEsperado closeTo: valorManoDeObra .! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 00:48'!test20pintorCalculaCorrectamenteElValorDeLaManoDeObraConRodillo	|unaTecnica valorManoDeObra valorEsperado pintor1 alba|		unaTecnica := TecnicaRodillo new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1.		valorManoDeObra := pintor1 valorManoDeObraPor: 50 conPintura: alba . 	valorEsperado := (1 "mano" * 50 "metros" * 1 "horas Por Rodillo" * 500 "precio por litro") .	self assert: valorEsperado closeTo: valorManoDeObra .! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:44'!test07pintorCalculaCorrectamenteElTiempoDeTrabajoCon1ManoConRodilloConMetrosFlotantes	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaRodillo new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500. 	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 1 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 55.5 conPintura: venier.	tiempoesperado := (55.5 "metros" *1 "mano" *1 "horas de rodillo").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:46'!test12pintorCalculaCorrectamenteElTiempoDeTrabajoConMasDeUnaManoConPincelConMetrosFlotantesGrandes	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaPincel new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500.	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 2 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 6378382294739483.9837498379983 conPintura: venier.	tiempoesperado := (6378382294739483.9837498379983 "metros" *2 "manos" *2 "horas por pincel").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 5/25/2020 22:57'!test17losPintoresPuedenTrabajarGratis	| algoFix alba  presupuesto valorEsperado |	algoFix := AlgoFix new.	algoFix registrarPintorDePincel: 'Diego' conValorHora: 0.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix		manoDeObra: 			(0) 		masMateriales: 			(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 00:47'!test19pintorCalculaCorrectamenteElValorDeLaManoDeObraConPincelCuandoHayDescuento	|unaTecnica valorManoDeObra valorEsperado pintor1 alba|		unaTecnica := TecnicaPincel  new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1.		valorManoDeObra := pintor1 valorManoDeObraPor: 60 conPintura: alba . 	valorEsperado := (1 "mano" * 60 "metros" * 2 "horas Por pincel" * 500 "precio por litro" * 0.5 "descuento") .	self assert: valorEsperado closeTo: valorManoDeObra .! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:45'!test09pintorCalculaCorrectamenteElTiempoDeTrabajoConMasDeUnaManoConPincelConMetrosEnteros	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaPincel new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500. 	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 2 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 55 conPintura: venier.	tiempoesperado := (55 "metros" *2 "manos" *2 "horas por pincel").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:47'!test15pintorCalculaCorrectamenteElTiempoDeTrabajoConMasDeUnaManoConRodilloConMetrosFlotantes	|pintor1 venier unatecnica tiempo tiempoesperado|		unatecnica := TecnicaRodillo new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500.	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 2 manosRodillo:3.	tiempo := pintor1 tiempoDeTrabajoPor: 7.5 conPintura: venier.	tiempoesperado := (7.5 "metros" *3 "manos" *1 "horas por rodillo").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:44'!test05pintorCalculaCorrectamenteElTiempoDeTrabajoCon1ManoConRodilloConMetrosEnteros	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaRodillo  new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500. 	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 1 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 55 conPintura: venier.	tiempoesperado := (55 "metros" *1 "mano" *1 "horas de rodillo").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:44'!test06pintorCalculaCorrectamenteElTiempoDeTrabajoCon1ManoConRodilloConMetrosEnterosGrandes	|pintor1 venier unatecnica tiempo tiempoesperado|		unatecnica := TecnicaRodillo  new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500. 	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 1 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 84373627292 conPintura: venier.	tiempoesperado := (84373627292 "metros" *1 "mano" *1 "horas de rodillo").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:45'!test08pintorCalculaCorrectamenteElTiempoDeTrabajoCon1ManoConRodilloConMetrosFlotantesGrandes	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaRodillo new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500.	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 1 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 7869605857448494.944547388292 conPintura: venier.	tiempoesperado := (7869605857448494.944547388292 "metros" *1 "mano" *1 "horas de rodillo").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:42'!test03pintorCalculaCorrectamenteElTiempoDeTrabajoCon1ManoConPincelConMetrosFlotantes	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaPincel new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500.	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 1 manosRodillo:1. 	tiempo := pintor1 tiempoDeTrabajoPor: 55.5 conPintura: venier.	tiempoesperado := (55.5 "metros" *1 "mano" *2 "horas de pincel").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:49'!test16pintorCalculaCorrectamenteElTiempoDeTrabajoConMasDeUnaManoConRodilloConMetrosFlotantesGrandes	|pintor1 venier unatecnica tiempo tiempoesperado|		unatecnica := TecnicaRodillo new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500. 	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 2 manosRodillo:3.	tiempo := pintor1 tiempoDeTrabajoPor: 386763295847630.7634974847393872 conPintura: venier.	tiempoesperado := (386763295847630.7634974847393872 "metros" *3 "manos" *1 "horas por rodillo").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:45'!test10pintorCalculaCorrectamenteElTiempoDeTrabajoConMasDeUnaManoConPincelConMetrosEnterosGrandes	|pintor1 venier unatecnica tiempo tiempoesperado|	unatecnica := TecnicaPincel new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500.	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 2 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 435378191937382910183 conPintura: venier.	tiempoesperado := (435378191937382910183 "metros" *2 "manos" *2 "horas por pincel").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:47'!test14pintorCalculaCorrectamenteElTiempoDeTrabajoConMasDeUnaManoConRodilloConMetrosEnterosGrandes	|pintor1 venier unatecnica tiempo tiempoesperado|		unatecnica := TecnicaRodillo new.	pintor1  :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500. 	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 2 manosRodillo:3.	tiempo := pintor1 tiempoDeTrabajoPor: 75983249237487301 conPintura: venier.	tiempoesperado := (75983249237487301 "metros" *3 "manos" *1 "horas por rodillo").	self assert: tiempoesperado closeTo: (tiempo).! !!PintorTests methodsFor: 'tests' stamp: 'joacobetz 6/22/2020 02:42'!test02pintorCalculaCorrectamenteElTiempoDeTrabajoCon1ManoConPincelConMetrosEnterosGrandes	|pintor1 venier unatecnica tiempo tiempoesperado|		unatecnica := TecnicaPincel new.	pintor1 :=Pintor conNombre: 'pablo' Tecnica: unatecnica Precio: 500.  	venier := Pintura conNombre: 'venier' precio:150  manosPincel: 1 manosRodillo:1.	tiempo := pintor1 tiempoDeTrabajoPor: 36847632874632 conPintura: venier.	tiempoesperado := (36847632874632 "metros" *1 "mano" *2 "horas de pincel").	self assert: tiempoesperado closeTo: (tiempo).! !TestCase subclass: #PinturaTests	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Test'!!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:27'!test07pinturaCalculaCorrectamenteLaCantidadDeLitrosConMasDeUnaManoConMetrosFlotantes	|unaTecnica unaCantidadDeLitros cantidadDeLitrosEsperada pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 5 manosRodillo: 1.		unaCantidadDeLitros := alba litrosNecesariosParaPintar:40.8 por: pintor1 .	cantidadDeLitrosEsperada := (5 "mano" * 40.8 "metros" * 4 "litros por ser con pincel") .	self assert: cantidadDeLitrosEsperada closeTo: unaCantidadDeLitros .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:26'!test04pinturaCalculaCorrectamenteLaCantidadDeLitrosCon1ManoConMetrosFlotantesGrandes	|unaTecnica unaCantidadDeLitros cantidadDeLitrosEsperada pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1.		unaCantidadDeLitros := alba litrosNecesariosParaPintar:87362476324732.73548763228746 por: pintor1 .	cantidadDeLitrosEsperada := (1 "mano" * 87362476324732.73548763228746 "metros" * 4 "litros por ser con pincel") .	self assert: cantidadDeLitrosEsperada closeTo: unaCantidadDeLitros .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:26'!test03pinturaCalculaCorrectamenteLaCantidadDeLitrosCon1ManoConMetrosFlotantes	|unaTecnica unaCantidadDeLitros cantidadDeLitrosEsperada pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1..		unaCantidadDeLitros := alba litrosNecesariosParaPintar:40 por: pintor1 .	cantidadDeLitrosEsperada := (1 "mano" * 40 "metros" * 4 "litros por ser con pincel") .	self assert: cantidadDeLitrosEsperada closeTo: unaCantidadDeLitros .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:27'!test09pinturaCalculaCorrectamenteElValorDelMaterialConPincel	|unaTecnica valorMaterial valorEsperado pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1.		valorMaterial := alba valorMaterialporTamaño: 30 porPintor: pintor1. 	valorEsperado := (1 "mano" * 30 "metros" * 4 "litros por ser con pincel" * 500 "precio por litro") .	self assert: valorEsperado closeTo: valorMaterial .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:27'!test06pinturaCalculaCorrectamenteLaCantidadDeLitrosConMasDeUnaManoConMetrosEnterosGrandes	|unaTecnica unaCantidadDeLitros cantidadDeLitrosEsperada pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 5 manosRodillo: 1.		unaCantidadDeLitros := alba litrosNecesariosParaPintar:4045827489350 por: pintor1 .	cantidadDeLitrosEsperada := (5 "mano" * 4045827489350 "metros" * 4 "litros por ser con pincel") .	self assert: cantidadDeLitrosEsperada closeTo: unaCantidadDeLitros .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:27'!test08pinturaCalculaCorrectamenteLaCantidadDeLitrosConMasDeUnaManoConMetrosFlotantesGrandes	|unaTecnica unaCantidadDeLitros cantidadDeLitrosEsperada pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 5 manosRodillo: 1.		unaCantidadDeLitros := alba litrosNecesariosParaPintar:54975694.7648572468 por: pintor1 .	cantidadDeLitrosEsperada := (5 "mano" * 54975694.7648572468 "metros" * 4 "litros por ser con pincel") .	self assert: cantidadDeLitrosEsperada closeTo: unaCantidadDeLitros .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 00:30'!test10pinturaCalculaCorrectamenteElValorDelMaterialConRodillo	|unaTecnica valorMaterial valorEsperado pintor1 alba|		unaTecnica := TecnicaRodillo new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1.		valorMaterial := alba valorMaterialporTamaño: 30 porPintor: pintor1. 	valorEsperado := (1 "mano" * 30 "metros" * 5 "litros por ser con pincel" * 500 "precio por litro") .	self assert: valorEsperado closeTo: valorMaterial .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:26'!test02pinturaCalculaCorrectamenteLaCantidadDeLitrosCon1ManoConMetrosEnterosGrandes	|unaTecnica unaCantidadDeLitros cantidadDeLitrosEsperada pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1.		unaCantidadDeLitros := alba litrosNecesariosParaPintar:8854309840329840923840 por: pintor1 .	cantidadDeLitrosEsperada := (1 "mano" * 8854309840329840923840 "metros" * 4 "litros por ser con pincel") .	self assert: cantidadDeLitrosEsperada closeTo: unaCantidadDeLitros .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:27'!test05pinturaCalculaCorrectamenteLaCantidadDeLitrosConMasDeUnaManoConMetrosEnteros	|unaTecnica unaCantidadDeLitros cantidadDeLitrosEsperada pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 5 manosRodillo: 1.		unaCantidadDeLitros := alba litrosNecesariosParaPintar:40 por: pintor1 .	cantidadDeLitrosEsperada := (5 "mano" * 40 "metros" * 4 "litros por ser con pincel") .	self assert: cantidadDeLitrosEsperada closeTo: unaCantidadDeLitros .! !!PinturaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:24'!test01pinturaCalculaCorrectamenteLaCantidadDeLitrosCon1ManoConMetrosEnteros	|unaTecnica unaCantidadDeLitros cantidadDeLitrosEsperada pintor1 alba|		unaTecnica := TecnicaPincel new.		pintor1 := Pintor conNombre: 'jorge' Tecnica: unaTecnica Precio: 500.	alba := Pintura conNombre: 'alba' precio: 500 manosPincel: 1 manosRodillo: 1.		unaCantidadDeLitros := alba litrosNecesariosParaPintar:40 por: pintor1 .	cantidadDeLitrosEsperada := (1 "mano" * 40 "metros" * 4 "litros por ser con pincel") .	self assert: cantidadDeLitrosEsperada closeTo: unaCantidadDeLitros .! !TestCase subclass: #PresupuestoTests	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Test'!!PresupuestoTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:50'!test02esMasCaroQueDevuelveFalseCuandoSeLoComparaConPresupuestoMasCaro		|presupuestoMayor presupuestoMenor valor |		presupuestoMayor := Presupuesto conResponsable: 'pepe' yValor: 6000.	presupuestoMenor := Presupuesto conResponsable: 'jorge' yValor: 40.		valor := (presupuestoMenor esMasCaroQue: presupuestoMayor).	self assert: valor equals: false! !!PresupuestoTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:50'!test01esMasCaroQueDevuelveTrueCuandoSeLoComparaConPresupuestoMasBarato		|presupuestoMayor presupuestoMenor valor |		presupuestoMayor := Presupuesto conResponsable: 'pepe' yValor: 6000.	presupuestoMenor := Presupuesto conResponsable: 'jorge' yValor: 40.		valor := (presupuestoMayor esMasCaroQue: presupuestoMenor).	self assert: valor equals: true! !TestCase subclass: #TecnicaTests	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Test'!!TecnicaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:46'!test01tecnicaPincelNoAplicaElDescuentoSiNoCorresponde		|valor tecnicaPincel|		tecnicaPincel := TecnicaPincel new.		valor := tecnicaPincel aplicarDescuentoPorTecnicaA: 500 porPintar: 12.		self assert: valor closeTo: 500 ! !!TecnicaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:47'!test02tecnicaPincelAplicaBienElDescuento		|valor tecnicaPincel|		tecnicaPincel := TecnicaPincel new.		valor := tecnicaPincel aplicarDescuentoPorTecnicaA: 500 porPintar: 1000.		self assert: valor closeTo: 250 ! !!TecnicaTests methodsFor: 'tests' stamp: 'joacobetz 6/24/2020 19:49'!test03tecnicaRodilloNoAplicaElDescuento		|valor tecnicaRodillo|		tecnicaRodillo  := TecnicaRodillo new.		valor := tecnicaRodillo aplicarDescuentoPorTecnicaA: 500 porPintar: 12000.		self assert: valor closeTo: 500 ! !